<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2024 on 堂吉哈哈德的博客</title>
    <link>https://xinxiaoyu.github.io/tags/2024/</link>
    <description>Recent content in 2024 on 堂吉哈哈德的博客</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 01 May 2024 17:53:31 +0800</lastBuildDate>
    <atom:link href="https://xinxiaoyu.github.io/tags/2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django入门分享</title>
      <link>https://xinxiaoyu.github.io/post/Django/Django%E5%85%A5%E9%97%A8%E5%88%86%E4%BA%AB/</link>
      <pubDate>Wed, 01 May 2024 17:53:31 +0800</pubDate>
      <guid>https://xinxiaoyu.github.io/post/Django/Django%E5%85%A5%E9%97%A8%E5%88%86%E4%BA%AB/</guid>
      <description>&lt;p&gt;在B站上准备连更Django入门视频教程（已更到30），&#xA;地址： &lt;a href=&#34;https://www.bilibili.com/video/BV1Q1GveGEpE/?vd_source=5b28eeafcb78cfe3946eef85cf8d4bf0&#34;&gt;https://www.bilibili.com/video/BV1Q1GveGEpE/?vd_source=5b28eeafcb78cfe3946eef85cf8d4bf0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker代理设置</title>
      <link>https://xinxiaoyu.github.io/post/docker/docker%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Sun, 07 Apr 2024 14:06:48 +0800</pubDate>
      <guid>https://xinxiaoyu.github.io/post/docker/docker%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;找到一篇docker设置代理的方法，三个不同阶段有不同的代理方式，链接如下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>k8s中yaml一些常用的字段写法</title>
      <link>https://xinxiaoyu.github.io/post/Kubernetes/k8s%E4%B8%ADyaml%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%97%E6%AE%B5/</link>
      <pubDate>Sun, 07 Apr 2024 14:06:48 +0800</pubDate>
      <guid>https://xinxiaoyu.github.io/post/Kubernetes/k8s%E4%B8%ADyaml%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%97%E6%AE%B5/</guid>
      <description>&lt;p&gt;1、 HostAliases：定义了 Pod 的 hosts 文件（比如 /etc/hosts）里的内容，用法如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>wireshark记录</title>
      <link>https://xinxiaoyu.github.io/post/tcpdumpWireshark/wireshark/</link>
      <pubDate>Sun, 07 Apr 2024 14:06:48 +0800</pubDate>
      <guid>https://xinxiaoyu.github.io/post/tcpdumpWireshark/wireshark/</guid>
      <description>&lt;p&gt;解析TLS数据包&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.ilikejobs.com/posts/wireshark/&#xD;&#xA;&#xD;&#xA;Using the (Pre)-Master-Secret&#xD;&#xA;The master secret enables TLS decryption in Wireshark and can be supplied via the Key Log File. The pre-master secret is the result from the key exchange and can be converted to a master secret by Wireshark. This pre-master secret can be obtained when a RSA private key is provided and a RSA key exchange is in use.&#xD;&#xA;&#xD;&#xA;Step-by-step instructions to decrypt TLS traffic from Chrome or Firefox in Wireshark:&#xD;&#xA;&#xD;&#xA;Close the browser completely (check your task manager just to be sure).&#xD;&#xA;Set environment variable SSLKEYLOGFILE to the absolute path of a writable file.&#xD;&#xA;&#xD;&#xA;Start the browser.&#xD;&#xA;Verify that the location from step 2 is created.&#xD;&#xA;In Wireshark, go to Preferences -&amp;gt; Protocols -&amp;gt; TLS, and change the (Pre)-Master-Secret log filename preference to the path from step 2.&#xD;&#xA;&#xD;&#xA;Start the Wireshark capture.&#xD;&#xA;Open a website, for example https://www.wireshark.org/&#xD;&#xA;&#xD;&#xA;Check that the decrypted data is visible. For example, using the tls and (http or http2) filter.&#xD;&#xA;&#xD;&#xA;For Windows, an environment variable can be set globally as described in this walkthrough, but this is not recommended since it is easy to forget about and may be a security issue since it allows decryption of all your TLS traffic. A better way to set the environment variable is via a batch file. Create a file start-fx.cmd with:&#xD;&#xA;&#xD;&#xA;@echo off&#xD;&#xA;set SSLKEYLOGFILE=%USERPROFILE%\Desktop\keylogfile.txt&#xD;&#xA;open firefox&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;http.host == &amp;ldquo;openapi.bei.com&amp;rdquo; and http.request.uri.query.parameter == &amp;ldquo;product_ids=%5B%271300028%27%5D&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>代理设置</title>
      <link>https://xinxiaoyu.github.io/post/Linux/%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Sun, 07 Apr 2024 14:06:48 +0800</pubDate>
      <guid>https://xinxiaoyu.github.io/post/Linux/%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;代理设置&lt;/p&gt;&#xA;&lt;p&gt;curl&#xA;curl -I -x &amp;ldquo;http://172.16.1.90:7890&amp;rdquo; &lt;a href=&#34;https://www.google.com&#34;&gt;https://www.google.com&lt;/a&gt;&#xA;curl &amp;ndash;socks5 &amp;ldquo;127.0.0.1:1234&amp;rdquo; &amp;ldquo;&lt;a href=&#34;https://ip.oxylabs.io/%22&#34;&gt;https://ip.oxylabs.io/&amp;quot;&lt;/a&gt; &amp;ndash;proxy-user user:pwd&lt;/p&gt;&#xA;&lt;p&gt;全局设置&#xA;export https_proxy=http://172.16.1.90:7890 http_proxy=http://172.16.1.90:7890 all_proxy=socks5://172.16.1.90:7890&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
